load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")

PROTO_NAMES = [
    "build.bazel.remote.execution.v2",
    "build.bazel.semver",
    "com.github.trace_machina.nativelink.remote_execution",
    "google.api",
    "google.bytestream",
    "google.longrunning",
    "google.rpc",
]

rust_binary(
    name = "gen_protos_tool",
    srcs = ["gen_protos_tool.rs"],
    deps = [
        "@crates//:clap",
        "@crates//:prost-build",
        "@crates//:tonic-build",
    ],
)

genrule(
    name = "gen_rs_protos",
    srcs = [
        "build/bazel/remote/execution/v2/remote_execution.proto",
        "build/bazel/semver/semver.proto",
        "com/github/trace_machina/nativelink/remote_execution/worker_api.proto",
        "google/api/annotations.proto",
        "google/api/client.proto",
        "google/api/http.proto",
        "google/bytestream/bytestream.proto",
        "google/longrunning/operations.proto",
        "google/protobuf/any.proto",
        "google/protobuf/descriptor.proto",
        "google/protobuf/duration.proto",
        "google/protobuf/empty.proto",
        "google/protobuf/timestamp.proto",
        "google/protobuf/wrappers.proto",
        "google/rpc/status.proto",
    ],
    outs = ["{}.pb.rs".format(name) for name in PROTO_NAMES],
    cmd = '''
        set -e
        export PROTOC=$(execpath @protobuf//:protoc)

        $(execpath :gen_protos_tool) $(SRCS) -o $(RULEDIR)

        for file in $(RULEDIR)/*.rs; do
            mv -- "$$file" "$${file%.rs}.pb.rs"
        done
        ''',
    tools = [
        ":gen_protos_tool",
        "@protobuf//:protoc",
    ],
)

py_binary(
    name = "gen_lib_rs_tool",
    srcs = ["gen_lib_rs_tool.py"],
)

genrule(
    name = "gen_lib_rs",
    srcs = [":gen_rs_protos"],
    outs = ["lib.rs"],
    cmd = "$(execpath :gen_lib_rs_tool) --rootdir $(RULEDIR) $(SRCS) > $@",
    tools = [":gen_lib_rs_tool"],
)

rust_library(
    name = "nativelink-proto",
    srcs = glob(["genproto/*.rs"]),
    tags = ["no-rustfmt"],
    visibility = ["//visibility:public"],
    deps = [
        "@crates//:prost",
        "@crates//:prost-types",
        "@crates//:tonic",
    ],
)

py_binary(
    name = "update_protos",
    srcs = ["update_protos.py"],
    args = ["--update"] + PROTO_NAMES,
    data = [
        ":gen_lib_rs",
        ":gen_rs_protos",
    ],
)

# Test to ensure the proto files are in sync with the checked in files.
py_test(
    name = "update_protos_test",
    timeout = "short",
    srcs = ["update_protos.py"],
    args = ["--check"] + PROTO_NAMES,
    data = glob(["genproto/*.rs"]) + [
        ":gen_lib_rs",
        ":gen_rs_protos",
    ],
    main = "update_protos.py",
)
