load("@rules_rust//rust:defs.bzl", "rust_binary")

exports_files(
    [
        ".rustfmt.toml",
    ],
    visibility = ["//visibility:public"],
)

rust_binary(
    name = "cas",
    srcs = [
        "src/bin/cas.rs",
    ],
    deps = [
        "//nativelink-config",
        "//nativelink-error",
        "//nativelink-proto",
        "//nativelink-scheduler",
        "//nativelink-service",
        "//nativelink-store",
        "//nativelink-util",
        "//nativelink-worker",
        "@crate_index//:async-lock",
        "@crate_index//:axum",
        "@crate_index//:clap",
        "@crate_index//:futures",
        "@crate_index//:hyper",
        "@crate_index//:parking_lot",
        "@crate_index//:prometheus-client",
        "@crate_index//:rustls-pemfile",
        "@crate_index//:scopeguard",
        "@crate_index//:serde_json5",
        "@crate_index//:tokio",
        "@crate_index//:tokio-rustls",
        "@crate_index//:tonic",
        "@crate_index//:tower",
        "@crate_index//:tracing",
        "@crate_index//:tracing-subscriber",
    ],
)

genrule(
    name = "dummy_test_sh",
    outs = ["dummy_test.sh"],
    cmd = "echo \"sleep .1;   echo $$(printf '=%.0s' {1..100})\" > \"$@\"",
)

sh_test(
    name = "dummy_test",
    srcs = [":dummy_test_sh"],
)

sh_library(
    name = "current_tag",
    srcs = ["@nativelink-current-tag//:bin/nativelink-current-tag"],
    target_compatible_with = select({
        "@rules_nixpkgs_core//constraints:support_nix": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
)
